{
  "openapi": "3.0.3",
  "info": {
    "title": "Customer API",
    "version": "1.0.0",
    "description": "API for managing customer data."
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "customers",
      "description": "Operations related to customers"
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "tags": ["customers"],
        "summary": "Get all customers",
        "description": "Retrieves a list of all customers.",
        "operationId": "getAllCustomers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["customers"],
        "summary": "Create a new customer",
        "description": "Adds a new customer to the system.",
        "operationId": "createCustomer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}":{
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Get customer by ID",
        "description": "Get customer information for the given ID",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404":{
            "description": "Customer not found",
            "content":{
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Customer": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 123,
            "readOnly": true
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "phoneNumber": {
            "type": "string",
            "example": "555-123-4567"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties":{
          "street": {
            "type": "string",
            "example": "123 Main St"
          },
          "city": {
            "type": "string",
            "example": "Anytown"
          },
          "state": {
            "type": "string",
            "example": "CA"
          },
          "zipCode": {
            "type": "string",
            "example": "90210"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}